==== Inscreen ====
V 1.0.0

== Participantes ==
  * Johnny Verdugo (SCRUM MASTER)
  * Danilo Vasquez Rivera (FULL STACK)
  * Jonathan Calderón (WEB DESIGNER)
== Requisitos ==
Para ejecutar esta aplicación, necesita al menos:

  * AngularJS 4
  * NODE 9.X
  * NPM 3.x
  * MongoDB 3.x
  * REDIS
  * TypeScript
== Inicio ==
Opciones de Incio :

  * Clonar el siguiente repositório : git clone https://cloud.analitic.cl:3000/Analitic/inscreen_beta.
== Comandos de terminal ==
Este proyecto se generó con Angular CLI version 1.0.0 y angular 4.x.

  - Instale NodeJs desde la página oficial de NodeJs.
  - Terminal abierto
  - Ve a la raíz de tu proyecto
  - Asegúrese de haber instalado Angular CLI.
  - Ejecutar en la terminal: npm install
  - Ejecutar ng serve para un servidor de desarrollo. Navegar en http://localhost:4200/. La aplicación se volverá a cargar automáticamente si cambia alguno de los archivos fuente.
Para obtener más ayuda sobre Angular CLI use ng help o vaya a Angular CLI README.

== Directorios del proyecto ==
Este proyecto tiene el siguiente árbol de directorios:

Directory Inscreen
  * ├── CHANGELOG.md
  * ├── LICENSE.md
  * ├── README.md
  * ├── angular-cli.json
  * ├── documentation
  * ├── e2e
  * ├── karma.conf.js
  * ├── package.json
  * ├── protractor.conf.js
  * ├── src
  * │   ├── app
  * │   │   ├── app.component.css
  * │   │   ├── app.component.html
  * │   │   ├── app.component.ts
  * │   │   ├── app.module.ts
  * │   │   ├── app.routing.ts
  * │   │   ├── components
  * │   │   │   ├── components.module.ts
  * │   │   │   ├── footer
  * │   │   │   │   ├── footer.component.css
  * │   │   │   │   ├── footer.component.html
  * │   │   │   │   └── footer.component.ts
  * │   │   │   ├── navbar
  * │   │   │   │   ├── navbar.component.css
  * │   │   │   │   ├── navbar.component.html
  * │   │   │   │   └── navbar.component.ts
  * │   │   │   └── sidebar
  * │   │   │       ├── sidebar.component.css
  * │   │   │       ├── sidebar.component.html
  * │   │   │       └── sidebar.component.ts
  * │   │   ├── dashboard
  * │   │   │   ├── dashboard.component.css
  * │   │   │   ├── dashboard.component.html
  * │   │   │   ├── dashboard.component.spec.ts
  * │   │   │   └── dashboard.component.ts
  * │   │   ├── layout
  * │   │   │   ├── app-layout
  * │   │   │   │    ├── app-layout.component.css
  * │   │   │   │    ├── app-layout.component.html
  * │   │   │   │    └── app-layout.component.ts
  * │   │   │   │    └── calculos-layout.component.ts
  * │   │   │   └── login-layout
  * │   │   │       ├── login-layout.component.css
  * │   │   │       ├── login-layout.component.html
  * │   │   │       └── login-layout.component.ts
  * │   │   ├── login
  * │   │   │   ├── login.component.css
  * │   │   │   ├── login.component.html
  * │   │   │   └── login.component.ts
  * │   │   ├── clientes
  * │   │   │   ├── clientes.component.css
  * │   │   │   ├── clientes.component.html
  * │   │   │   └── clientes.component.ts
  * │   │   ├── usuarios
  * │   │   │    ├── usuarios.component.css
  * │   │   │    ├── usuarios.component.html
  * │   │   │    └── usuarios.component.ts
  * │   │   ├── licencias
  * │   │   │    ├── licencias.component.css
  * │   │   │    ├── licencias.component.html
  * │   │   │    └── licencias.component.ts
  * │   │   └── inscreens
  * │   │       ├── inscreens.component.css
  * │   │       ├── inscreens.component.html
  * │   │       └── inscreens.component.ts
  * │   ├── assets
  * │   │   ├── css
  * │   │   ├── img
  * │   │   └── sass
  * │   │       ├── material-dashboard.scss
  * │   │       └── md
  * │   ├── environments
  * │   ├── favicon.ico
  * │   ├── index.html
  * │   ├── main.ts
  * │   ├── polyfills.ts
  * │   ├── styles.css
  * │   ├── test.ts
  * │   ├── tsconfig.app.json
  * │   ├── tsconfig.spec.json
  * │   └── typings.d.ts
  * ├── tsconfig.json
  * ├── tslint.json
  * └── typings

== Servidor de desarrollo ==
Ejecutar ng serve para un servidor de desarrollo. Navegue a http://localhost:4200/. La aplicación se volverá a cargar automáticamente si cambia alguno de los archivos fuente.

== Generates ==
Ejecute ng generate component component-name para generar un nuevo componente. También se puede utilizar ng generate directive|pipe|service|class|guard|interface|enum|module.

== Construcción aplicación de producción ==
Ejecute ng build para construir el proyecto. Los artefactos de construcción se almacenarán en el directorio dist/. Use --prod . para construcción en producción.

== Ejecución de pruebas unitarias ==
Ejecutar ng test para ejecutar las pruebas unitarias a través de Karma.

== Ejecución pruebas de extremo a extremo ==
Ejecutar ng e2e para ejecutar las pruebas de extremo a extremo Protractor.